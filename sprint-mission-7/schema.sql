CREATE TABLE users (
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
email VARCHAR(255) NOT NULL,
password VARCHAR(255) NOT NULL,
created_at TIMESTAMPTZ DEFAULT NOW(),
updated_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE products(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
user_id INT,
name VARCHAR(255) NOT NULL,
description VARCHAR(255) NOT NULL,
price INT NOT NULL,
likes INT NOT NULL,
img VARCHAR(500) NULL,
created_at TIMESTAMPTZ DEFAULT NOW(),
updated_aT TIMESTAMPTZ DEFAULT NOW(),

CONSTRAINT fk_user
	FOREIGN KEY (user_id) REFERENCES users(id) 
	ON DELETE CASCADE
);

CREATE TABLE tags(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
name VARCHAR(5) NOT NULL
)

CREATE TABLE productsToTags(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
product_id INT,
tag_id INT,

CONSTRAINT fk_product
	FOREIGN KEY (product_id) REFERENCES users(id) 
	ON DELETE CASCADE,
CONSTRAINT fk_tag
	FOREIGN KEY (tag_id) REFERENCES articles(id)
	ON DELETE CASCADE
);

CREATE TABLE likes(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
user_id INT,
product_id INT,

CONSTRAINT fk_product
	FOREIGN KEY (product_id) REFERENCES users(id) 
	ON DELETE CASCADE,
CONSTRAINT fk_user
	FOREIGN KEY (user_id) REFERENCES product_id(id)
	ON DELETE CASCADE
);

CREATE TABLE articles(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
user_id INT,
name VARCHAR(255) NOT NULL,
description VARCHAR(255) NOT NULL,
img VARCHAR(500) NULL,
tags TEXT[] NULL,
createdAt TIMESTAMPTZ DEFAULT NOW(),
updatedAT TIMESTAMPTZ DEFAULT NOW(),

CONSTRAINT fk_user
	FOREIGN KEY (user_id) REFERENCES users(id) 
	ON DELETE CASCADE
);

CREATE TABLE comments(
id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
content VARCHAR(500) NOT NULL,
user_id INT,
article_id INT,

CONSTRAINT fk_user
	FOREIGN KEY (user_id) REFERENCES users(id) 
	ON DELETE CASCADE,
CONSTRAINT fk_article
	FOREIGN KEY (article_id) REFERENCES articles(id)
	ON DELETE CASCADE
)